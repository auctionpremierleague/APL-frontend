{"version":3,"sources":["pages/HomePage.js","pages/sign-up/SignUp.js","pages/sign-in/SignIn.js","pages/Auction/Auction.js","NavBar.js","App.js","serviceWorker.js","index.js"],"names":["HomePage","SignUp","state","userName","password","handleSubmit","e","preventDefault","handleChange","setState","target","name","value","handleClick","fetch","method","headers","body","JSON","stringify","then","res","console","log","catch","err","onSubmit","this","type","placeholder","onChange","onClick","React","Component","SignIn","status","useStyles","makeStyles","theme","margin","spacing","image","height","container","backgroundImage","backgroundSize","drawer","width","flexShrink","drawerPaper","drawerHeader","display","alignItems","padding","mixins","toolbar","justifyContent","ImgMediaCard","classes","useTheme","useState","next","setNext","playersList","setPlayersList","playerName","setPlayerName","index","setIndex","playerImage","setPlayerImage","team","setTeam","role","setRole","battingStyle","setBattingStyle","bowlingStyle","setBowlingStyle","open","setOpen","setDrawerContent","Image","Fragment","className","alt","src","title","PlayerInfo","Typography","useEffect","Team","pid","length","json","j","root","Grid","alignContent","item","xs","Button","variant","color","size","button","startIcon","lg","Slide","direction","in","mountOnEnter","unmountOnExit","TextField","id","label","endIcon","Drawer","anchor","paper","IconButton","NavBar","to","App","path","component","exact","Auction","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.f1fd8600.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst HomePage =()=>(\r\n    <>\r\n    <h1>hello</h1>\r\n    <p>this is homepage</p>\r\n    </>\r\n)\r\n\r\nexport default HomePage;","import React from 'react';\r\n\r\n\r\n\r\nclass SignUp extends React.Component {\r\n  state = {\r\n    userName:\"\",\r\n    password:\"\"\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n  \r\n  handleClick=()=> {\r\n\r\n    this.setState(\r\n      {\r\n       userName:this.state.userName,\r\n       password:this.state.password\r\n      },\r\n      () =>{\r\n        fetch('user', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'accept':'application/json'\r\n      },\r\n      body:JSON.stringify({userName:this.state.userName,password:this.state.password})\r\n    }).then(res=>console.log(res)).catch(err =>console.log(err));\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n  <input type=\"text\" name=\"userName\" placeholder=\"UserName\" value={this.state.userName} onChange={this.handleChange} />\r\n  <input type=\"password\" name=\"password\" placeholder=\"PassWord\" value={this.state.password} onChange={this.handleChange} />\r\n\r\n      \r\n        <button onClick={this.handleClick}>Send data!</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nexport default SignUp;\r\n","import React from 'react';\r\n\r\n\r\n\r\nclass SignIn extends React.Component {\r\n  state = {\r\n    userName:\"\",\r\n    password:\"\"\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n  \r\n  handleClick=()=> {\r\n\r\n    this.setState(\r\n      {\r\n       userName:this.state.userName,\r\n       password:this.state.password\r\n      },\r\n      () =>{\r\n        fetch(`user/${this.state.userName}/${this.state.password}`, {\r\n      method: 'GET'\r\n    }).then(res=>{if(res.status===400){\r\nconsole.log(\"fail\");}\r\nelse{\r\nconsole.log(\"success\")\r\n}\r\n    }).catch(err =>console.log(err));\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n  <input type=\"text\" name=\"userName\" placeholder=\"UserName\" value={this.state.userName} onChange={this.handleChange} />\r\n  <input type=\"password\" name=\"password\" placeholder=\"PassWord\" value={this.state.password} onChange={this.handleChange} />\r\n\r\n      \r\n        <button onClick={this.handleClick}>Send data!</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nexport default SignIn;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\r\n//import Card from '@material-ui/core/Card';\r\n//import CardActionArea from '@material-ui/core/CardActionArea';\r\n//import CardActions from '@material-ui/core/CardActions';\r\n//import CardContent from '@material-ui/core/CardContent';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Button from '@material-ui/core/Button';\r\n//import CardMedia from '@material-ui/core/CardMedia';\r\n//import Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n//import Paper from '@material-ui/core/Paper';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\n//import Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\r\nimport CheckSharpIcon from '@material-ui/icons/CheckSharp';\r\nimport ClearSharpIcon from '@material-ui/icons/ClearSharp';\r\nimport TextField from '@material-ui/core/TextField';\r\nconst drawerWidth = 100;\r\nconst useStyles = makeStyles((theme) => ({\r\n    margin: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    image:{\r\n        height:\"200px\"\r\n    },\r\n    container: {\r\n        backgroundImage: \"url(\\\"../RCB/5334.jpg\\\")\",\r\n        backgroundSize: 'cover'\r\n    },drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n      },\r\n      drawerPaper: {\r\n        width: drawerWidth,\r\n      },\r\n      drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-start',\r\n      }\r\n}));\r\n\r\n\r\nexport default function ImgMediaCard() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n \r\n    const [next, setNext] = useState(false)\r\n    const [playersList, setPlayersList] = useState([]);\r\n    const [playerName, setPlayerName] = useState(\"\");\r\n    const [index, setIndex] = useState(0);\r\n    const [playerImage, setPlayerImage] = useState(\"\");\r\n    const [team,setTeam]=useState(\"\");\r\n    const [role,setRole]=useState(\"\");\r\n    const [battingStyle,setBattingStyle]=useState(\"\");\r\n    const[bowlingStyle,setBowlingStyle]=useState(\"\");\r\n    const[open,setOpen]=useState(false);\r\n    const[drawerContent,setDrawerContent]=useState(\"Info\");\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n      };\r\n    useEffect(() => {\r\n        if (playersList[index]) {\r\n            setPlayerName(playersList[index].name)\r\n            setPlayerImage(`../${playersList[index].Team}/${playersList[index].pid}.jpg`);\r\n            setTeam(playersList[index].Team);\r\n            setRole(playersList[index].role);\r\n            setBattingStyle(playersList[index].battingStyle);\r\n            setBowlingStyle(playersList[index].bowlingStyle)\r\n            setNext(true)\r\n        }\r\n\r\n    }, [index, playersList, next])\r\n\r\n\r\n    if (playersList.length === 0) {\r\n        fetch('http://192.168.29.191:4000/players', {\r\n            method: \"GET\"\r\n        }).then(res => {\r\n            res.json().then(j => {\r\n                setPlayersList(j);\r\n                setIndex(0)\r\n            });\r\n        });\r\n    }\r\n    function Image() {\r\n        return <React.Fragment>\r\n            <img className={classes.image}\r\n\r\n                alt=\"Contemplative Reptile\"\r\n\r\n                src={playerImage}\r\n                title=\"Contemplative Reptile\"\r\n            />\r\n        </React.Fragment>\r\n    }\r\n\r\n    function PlayerInfo(){\r\n        return <React.Fragment>\r\n                        <Typography >\r\n                               Team : {team}\r\n                            </Typography>\r\n                            <Typography >\r\n                               Role : {role}\r\n                            </Typography>\r\n                            <Typography >\r\n                               Bat : {battingStyle}\r\n                            </Typography>\r\n                            <Typography >\r\n                               Bowl : {bowlingStyle}\r\n                            </Typography>\r\n        </React.Fragment>\r\n    }\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid container alignContent=\"center\" alignItems=\"center\"\r\n            >\r\n\r\n                <Grid item  xs={3} >\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        size=\"small\"\r\n                        className={classes.button}\r\n                        startIcon={<NavigateBeforeIcon />}\r\n                        onClick={() => setIndex(index - 1)}>\r\n\r\n                    </Button>\r\n                </Grid>\r\n\r\n                <Grid item  lg={6} xs={6}>\r\n                    <Slide direction=\"left\" in={next} mountOnEnter unmountOnExit>\r\n                        <div  >\r\n                      \r\n                         \r\n                            <Image />\r\n                            <InfoOutlinedIcon onClick={()=>{setOpen(true)}}/>\r\n                            <Typography >\r\n                                {playerName}\r\n                            </Typography>\r\n\r\n                            <Button\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        size=\"small\"\r\n                        className={classes.button}\r\n                        startIcon={<CheckSharpIcon />}\r\n                        onClick={() => {setOpen(true);setDrawerContent(\"franchiseInfo\");}}>\r\n                        SOLD\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        size=\"small\"\r\n                        className={classes.button}\r\n                        startIcon={<ClearSharpIcon />}\r\n                        onClick={() => setIndex(index - 1)}>\r\n                                UNSOLD\r\n                    </Button>\r\n                            \r\n\r\n                    <TextField id=\"outlined-basic\" label=\"Outlined\" variant=\"outlined\" />\r\n\r\n                        </div>\r\n                    </Slide >\r\n                </Grid>\r\n                <Grid item xs={3} >\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        size=\"small\"\r\n                        className={classes.button}\r\n                        endIcon={<NavigateNextIcon />}\r\n                        onClick={() => setIndex(index + 1)}>\r\n\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n            <Drawer\r\n            variant=\"persistent\"\r\n            anchor=\"right\"\r\n            open={open}\r\n            classes={{\r\n                paper: classes.drawerPaper,\r\n              }}\r\n            >\r\n             <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === 'rtl' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n          </IconButton>\r\n           {drawerContent===\"Info\"?<PlayerInfo/>:<PlayerInfo/>}\r\n                            \r\n            </Drawer>\r\n        </div>\r\n    );\r\n\r\n}\r\n","import React from \"react\";\r\n\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst NavBar =()=>(\r\n    <nav>\r\n        <ul>\r\n            <li>\r\n\r\n<Link to=\"/about\">Home</Link>\r\n<Link to=\"/signUp\">signUp</Link>\r\n<Link to=\"/signIn\">signIn</Link>\r\n<Link to=\"/auction\">Auction</Link>\r\n            </li>\r\n        </ul>\r\n    </nav>\r\n)\r\n\r\nexport default NavBar;","import React from 'react';\r\nimport './App.css';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route\r\n} from \"react-router-dom\"\r\nimport HomePage from \"./pages/HomePage\";\r\nimport SignUp from \"./pages/sign-up/SignUp\";\r\nimport SignIn from \"./pages/sign-in/SignIn\";\r\nimport Auction from \"./pages/Auction/Auction\";\r\nimport NavBar from \"./NavBar\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n    <div className=\"App\">\r\n    <NavBar/>\r\n    <div id=\"page-body\">\r\n     <Route path=\"/\" component ={HomePage} exact/>\r\n     <Route path=\"/auction\" component ={Auction} exact/>\r\n     <Route path=\"/signUp\" component ={SignUp} exact/>\r\n     <Route path=\"/signIn\" component ={SignIn} exact/>\r\n    </div>\r\n    </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}